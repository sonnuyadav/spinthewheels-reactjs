{"version":3,"sources":["components/app/header.js","assets/images/logo.jfif","components/app/footer.js","components/base.js","components/my-routes/NotFound.js","components/pages/home/index.js","components/home.js","components/pages/dailyscore/index.js","components/pages/monthlyscore/index.js","components/pages/score/index.js","components/my-routes/Routers.js","App.js","reportWebVitals.js","index.js"],"names":["currentTabClass","history","path","location","pathname","withRouter","useHistory","useState","isGameHover","className","id","type","to","Footer","Base","children","title","NotFound","Wheel","props","state","selectedItem","name","selectItem","bind","a","this","Math","floor","random","items","length","console","log","itemArr","foodItem","forEach","value","key","onSelectItem","setState","fetch","body","JSON","stringify","headers","method","res","json","result","setTimeout","wheelVars","spinning","onChange","e","target","style","onClick","map","item","index","React","Component","Home","Scores","DataisLoaded","then","needToParse","viewData","parse","o","doe","Routers","exact","component","ScoreBoard","MonthlyBoard","AllScore","App","wow","WOW","useEffect","init","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8642e709.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Logo from \"../../assets/images/logo.jfif\";\r\nimport { Link, useHistory, withRouter } from \"react-router-dom\";\r\n\r\nconst currentTabClass = (history, path) => {\r\n  if (history.location.pathname === path) {\r\n    return \"active\";\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nconst Header = (history) => {\r\n  let history2 = useHistory();\r\n  const [values, setValues] = useState({\r\n    isGameHover: false,\r\n  });\r\n\r\n  return (\r\n    <header className=\"site-header home-one\" id=\"masthead\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"site-branding col-xs-12 col-sm-3\">\r\n           <span>SpinTheWheel</span>\r\n          </div>\r\n          <nav\r\n            className=\"main-navigation navbar navbar-default\"\r\n            id=\"site-navigation\"\r\n          >\r\n            <div className=\"navbar-header\">\r\n              <button\r\n                data-target=\".navbar-ex1-collapse\"\r\n                data-toggle=\"collapse\"\r\n                className=\"navbar-toggle\"\r\n                type=\"button\"\r\n              >\r\n                <span className=\"sr-only\">Toggle navigation</span>\r\n                <span className=\"icon-bar\" />\r\n                <span className=\"icon-bar\" />\r\n                <span className=\"icon-bar\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"collapse navbar-collapse navbar-ex1-collapse\">\r\n              <ul className=\"nav navbar-nav\">\r\n              <li className={currentTabClass(history, \"/\")}>\r\n                  <Link to=\"/\">Game</Link>\r\n                </li>\r\n                <li className={currentTabClass(history, \"/score-board\")}>\r\n                  <Link to=\"/daily-score\">Daily Score</Link>\r\n                </li>\r\n                <li className={currentTabClass(history, \"/monthly-board\")}>\r\n                  <Link to=\"/monthly-score\">Monthly Score</Link>\r\n                </li>\r\n                <li className={currentTabClass(history, \"/all-board\")}>\r\n                  <Link to=\"/all-score\">All Score</Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default withRouter(Header);\r\n","export default __webpack_public_path__ + \"static/media/logo.5b73c7ed.jfif\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"site-footer\" id=\"colophon\">\r\n     \r\n      <div className=\"footer-bottom\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"copyright\">\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HeaderTop from \"./app/header-top\";\r\nimport Header from \"./app/header\";\r\nimport Footer from \"./app/footer\";\r\nimport FooterCallToAction from \"./app/footer-call-to-action\";\r\n\r\nconst Base = ({ children, title }) => {\r\n  return (\r\n    <div className=\"\">\r\n      <Header />\r\n      {children}\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\nexport default Base;\r\n","import React from \"react\";\r\nimport Base from \"../base\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n      <Base><>\r\n          \r\n          <div className=\"page-spacer clearfix\">\r\n              <div id=\"primary\">\r\n                  <main id=\"main\" className=\"site-main\">\r\n                      <section className=\"error-404 not-found\">\r\n                          <div className=\"col-xs-12 col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3 text-center\">\r\n                              <span className=\"font-large\">404 <strong>page not found</strong></span>\r\n                              <h2 className=\"text-center head-border-default\">Something Is Wrong</h2>\r\n                              <div className=\"page-content\">\r\n                                  <h4>The page you are looking for was moved, removed, renamed\r\n                                      or might never exist.</h4>\r\n                                  <Link to=\"/\" className=\"btn btn-normal btn-medium\">Go Home</Link>\r\n                              </div>\r\n                          </div>\r\n                      </section>\r\n                  </main>\r\n              </div>\r\n          </div>\r\n      </>\r\n      </Base>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport './index.css';\r\n\r\nexport default class Wheel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n  \r\n    this.state = {\r\n      selectedItem: null,\r\n      name:\"\"\r\n    };\r\n    this.selectItem = this.selectItem.bind(this);\r\n  }\r\n\r\n  async selectItem() {\r\n    if (this.state.selectedItem === null) {\r\n      const selectedItem = Math.floor(Math.random() * this.props.items.length);\r\n      console.log('name========',this.state.name);\r\n      console.log('wheel',this.props);\r\n\r\n      let itemArr = this.props.items;\r\n      let foodItem = '';\r\n      itemArr.forEach(function(value, key) {\r\n         if(key === selectedItem){\r\n          foodItem =value;\r\n        }\r\n       });\r\n      if (this.props.onSelectItem) {\r\n        this.props.onSelectItem(selectedItem);\r\n      }\r\n      this.setState({ selectedItem });\r\n      const res = await fetch('https://formula.itnfd.com/api/postscore', {\r\n        body: JSON.stringify({\r\n          name: this.state.name,\r\n          selectedItem: selectedItem,\r\n          foodItem:foodItem\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        method: 'POST'\r\n      });\r\n   const result = await res.json();\r\n console.log(\"DATA==========\",result);\r\n    \r\n    \r\n    } else {\r\n      this.setState({ selectedItem: null });\r\n      setTimeout(this.selectItem, 500);\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    console.log(\"=this.state=\",this.state);\r\n    const { selectedItem } = this.state;\r\n    const { items } = this.props;\r\n    const wheelVars = {\r\n      '--nb-item': items.length,\r\n      '--selected-item': selectedItem,\r\n    };\r\n    const spinning = selectedItem !== null ? 'spinning' : '';\r\n     console.log(\"===selectedItem==\",selectedItem);\r\n     console.log(\"==\",wheelVars);\r\n    return (\r\n      <div><span><strong>Enter Player Name: </strong></span>\r\n       <input type=\"text\" id=\"input\" value={this.state.name} onChange={ e => this.setState({name: e.target.value})}/>\r\n       <br/>\r\n       <br/>\r\n      <div className=\"wheel-container\">\r\n        <div className={`wheel ${spinning}`} style={wheelVars} onClick={this.selectItem}>\r\n          {items.map((item, index) => (\r\n            <div className=\"wheel-item\" key={index} style={{ '--item-nb': index }}>\r\n              {item}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Base from \"./base\";\r\nimport Wheel from './pages/home/';\r\n\r\nconst Home = (props) => {\r\n  let places = ['Pizzas', 'Sandwiches', 'Salads', 'Soup', 'Chinese food', 'Pastas','Chicken'];\r\n  return (\r\n    <Base>\r\n      <div>\r\n      <div className=\"App\">\r\n        <h1>What should you eat today?</h1>\r\n        <span className=\"spnTxt\">Enter Player name is mandetory</span>\r\n         <Wheel items={places} />\r\n   \r\n       \r\n      </div>\r\n      </div>\r\n    \r\n    </Base>\r\n  );\r\n\r\n\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Base from \"../../base\";\r\n\r\nexport default class Scores extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n   \r\n        this.state = {\r\n            items: [],\r\n            DataisLoaded: false\r\n        };\r\n    }\r\n \r\n    // ComponentDidMount is used to\r\n    // execute the code \r\n    componentDidMount() {\r\n        fetch(\"https://formula.itnfd.com/api/getscore\")\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n               const needToParse = JSON.stringify(json);\r\n                let viewData = JSON.parse(needToParse);\r\n                var result =JSON.parse(viewData).map(function(o) {\r\n                    return o;\r\n                  });\r\n              this.setState({\r\n                    items: result,\r\n                    DataisLoaded: true\r\n                });\r\n            })\r\n    }\r\n render() {\r\n    const { DataisLoaded, items } = this.state;\r\n   if (!DataisLoaded) return <div>\r\n        <h1>Pleses wait some time.... </h1> </div> ;\r\n    return (\r\n    <Base>\r\n      <>\r\n      <div className=\"container\">\r\n\t  <div className=\"row\">\r\n\t\t<div className=\"span5\">\r\n            <table className=\"table table-striped table-condensed\">\r\n                  <thead>\r\n                  <tr>\r\n                      <th>Name</th>\r\n                      <th>Food Item </th>\r\n                      <th>Date</th>\r\n                   </tr>\r\n              </thead>   \r\n              <tbody>\r\n             {\r\n                items.map((item) => ( \r\n                <tr key = { item.id }>\r\n               <td>{ item.name }</td>\r\n               <td>{ item.item }</td>\r\n               <td>{ item.doe }</td>\r\n               </tr>\r\n                ))\r\n            }\r\n             </tbody>\r\n            </table>\r\n            </div>\r\n\t</div>\r\n</div> \r\n      </>\r\n    </Base>\r\n);\r\n\r\n}\r\n}\r\n","import React from \"react\";\r\nimport Base from \"../../base\";\r\n\r\nexport default class Scores extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n   \r\n        this.state = {\r\n            items: [],\r\n            DataisLoaded: false\r\n        };\r\n    }\r\n   \r\n    // ComponentDidMount is used to\r\n    // execute the code \r\n    componentDidMount() {\r\n        fetch(\"https://formula.itnfd.com/api/getscore\")\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n               const needToParse = JSON.stringify(json);\r\n                let viewData = JSON.parse(needToParse);\r\n                var result =JSON.parse(viewData).map(function(o) {\r\n                    return o;\r\n                  });\r\n              this.setState({\r\n                    items: result,\r\n                    DataisLoaded: true\r\n                });\r\n            })\r\n    }\r\n render() {\r\n    const { DataisLoaded, items } = this.state;\r\n   if (!DataisLoaded) return <div>\r\n        <h1>Pleses wait some time.... </h1> </div> ;\r\n    return (\r\n    <Base>\r\n      <>\r\n      <div className=\"container\">\r\n\t  <div className=\"row\">\r\n\t\t<div className=\"span5\">\r\n            <table className=\"table table-striped table-condensed\">\r\n                  <thead>\r\n                  <tr>\r\n                      <th>Name</th>\r\n                      <th>Food Item </th>\r\n                      <th>Date</th>\r\n                   </tr>\r\n              </thead>   \r\n              <tbody>\r\n             {\r\n                items.map((item) => ( \r\n                <tr key = { item.id }>\r\n               <td>{ item.name }</td>\r\n               <td>{ item.item }</td>\r\n               <td>{ item.doe }</td>\r\n               </tr>\r\n                ))\r\n            }\r\n             </tbody>\r\n            </table>\r\n            </div>\r\n\t</div>\r\n</div> \r\n      </>\r\n    </Base>\r\n);\r\n\r\n}\r\n}\r\n","import React from \"react\";\r\nimport Base from \"../../base\";\r\n\r\nexport default class Scores extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n   \r\n        this.state = {\r\n            items: [],\r\n            DataisLoaded: false\r\n        };\r\n    }\r\n   \r\n    // ComponentDidMount is used to\r\n    // execute the code \r\n    componentDidMount() {\r\n        fetch(\"https://formula.itnfd.com/api/getscore\")\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n               const needToParse = JSON.stringify(json);\r\n                let viewData = JSON.parse(needToParse);\r\n                var result =JSON.parse(viewData).map(function(o) {\r\n                    return o;\r\n                  });\r\n              this.setState({\r\n                    items: result,\r\n                    DataisLoaded: true\r\n                });\r\n            })\r\n    }\r\n render() {\r\n    const { DataisLoaded, items } = this.state;\r\n   if (!DataisLoaded) return <div>\r\n        <h1>Pleses wait some time.... </h1> </div> ;\r\n    return (\r\n    <Base>\r\n      <>\r\n      <div className=\"container\">\r\n\t  <div className=\"row\">\r\n\t\t<div className=\"span5\">\r\n            <table className=\"table table-striped table-condensed\">\r\n                  <thead>\r\n                  <tr>\r\n                      <th>Name</th>\r\n                      <th>Food Item </th>\r\n                      <th>Date</th>\r\n                   </tr>\r\n              </thead>   \r\n              <tbody>\r\n             {\r\n                items.map((item) => ( \r\n                <tr key = { item.id }>\r\n               <td>{ item.name }</td>\r\n               <td>{ item.item }</td>\r\n               <td>{ item.doe }</td>\r\n               </tr>\r\n                ))\r\n            }\r\n             </tbody>\r\n            </table>\r\n            </div>\r\n\t</div>\r\n</div> \r\n      </>\r\n    </Base>\r\n);\r\n\r\n}\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport NotFound from \"./NotFound\";\r\nimport Home from \"../home\";\r\nimport ScoreBoard from \"../pages/dailyscore/\";\r\nimport MonthlyBoard from \"../pages/monthlyscore/\";\r\nimport AllScore from \"../pages/score/\";\r\n\r\n\r\nfunction Routers() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/daily-score\" component={ScoreBoard} />\r\n        <Route exact path=\"/monthly-score\" component={MonthlyBoard} />\r\n        <Route exact path=\"/all-score\" component={AllScore} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Routers;\r\n","import \"./App.css\";\r\nimport React, { useEffect } from \"react\";\r\nimport Routers from \"./components/my-routes/Routers\";\r\nimport WOW from \"wow.js\";\r\n\r\nfunction App() {\r\n  const wow = new WOW();\r\n  useEffect(() => {\r\n    wow.init();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Routers />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n//import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}